{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",

    "parameters": {
        "customerPrefix": {
            "type": "string",
            "metadata": {
                "description": "Name of customer being deployed"
            }
        },
        "environPrefix": {
            "type": "string",
            "allowedValues": [
                "Prod",
                "test"
            ],
            "metadata": {
                "description": "Environment prefix"
            }
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of VMs to create"
            }
        }
    },

    "variables": {
        "stndStorageAccountName": "[toLower(concat( parameters('customerPrefix') , parameters('environPrefix') , 'stnd' ))]",

        "vnetName": "[concat( parameters('customerPrefix'), '-vnet' )]",
        "asName": "[concat( parameters('customerPrefix'), '-App-as' )]",
        "vmName": "[concat( parameters('customerPrefix'), '-App' )]",
        "vipName": "[concat( parameters('customerPrefix'), '-', parameters('environPrefix'), '-vip' )]",
        "lbName": "[concat( parameters('customerPrefix'), '-', parameters('environPrefix'), '-lb' )]",

        "dnsName": "[toLower( concat( parameters('customerPrefix'), parameters('environPrefix') ))]",
        "subnetName": "[concat( parameters('environPrefix') , 'App' )]",
        "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')    ), '/subnets/', variables('subnetName')  )]",

        "faultDomainCount": "3",
        "vmSize": "Standard_A3",
        "adminUsername": "Dennis",
        "adminPassword": "P@ssword1",

        "templateBaseUrl": "https://raw.githubusercontent.com/dennisan/PSSpike/master/ARMTemplates/",
        https://raw.githubusercontent.com/dennisan/AzureDeploy/d997b86bc8e054f50506d80714acda7fce5f9b43/Scripts/PostDeployScript.ps1
    },

    "resources": [

        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('asName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "PlatformFaultDomainCount": "[variables('faultDomainCount')]"
            }
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vipName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                }
            }
        },

        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vipName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vipName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBAP"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/LBFE')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmName'), copyIndex(1), '-nic' )]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/LBBAP')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [ ]
                        }

                    }
                ]
            }
        },


        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), copyIndex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('asName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmName'), copyIndex(1), '-nic')]"
            ],
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('asName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'), copyIndex(1), '-nic'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex(1))]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('stndStorageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('vmName'), copyIndex(1),'-disk-','0')]",
                            "createOption": "Empty",
                            "diskSizeGB": "1023",
                            "vhd": {
                                "uri": "[concat('http://',variables('stndStorageAccountName'),'.blob.core.windows.net/vhds/', variables('vmName'), copyIndex(1),'-disk-','0','.vhd')]"
                            },
                            "caching": "None"
                        }
                    ]
                }
            },

            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/CustomScriptExtension')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex(1))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.2",
                        "settings": {
                            "fileUris": [ "[parameters('scriptFile')]" ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file PostDeployScript.ps1'))]"
                        }
                    }
                }
            ]
        }
    ]
}
